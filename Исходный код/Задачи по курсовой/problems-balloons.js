// Задача №1
/*
Некоторые сферические шарики распределены по двухмерному пространству.
Для каждого шарика даны x-координаты начала и конца его горизонтального диаметра.
Так как пространстводвумерно, то y-координаты не имеют значения в данной задаче.
Координата x start всегда меньше x end. Стрелу можно выстрелить строго вертикально
(вдоль y-оси) из разных точек x-оси. Шарик с координатами x start и x end уничтожается стрелой,
если она была выпущена из такой позиции x, что x start ⩽ x ⩽ x end.
Когда стрела выпущена, она летит в пространстве бесконечное время (уничтожая все шарики на пути).
Дан массив points, где points[i] = [x start, x end]. Напишите функцию, возвращающую минимальное количество стрел,
которые нужно выпустить, чтобы уничтожить все шарики.
 */

const balloons = (points) => {
    points.sort((a, b) => a[0] - b[0]);
    let prev = null,
        count = 0;

    for(let [start, end] of points) {
        if (prev == null || prev < start) {
            count++;
            prev = end;
        } else prev = Math.min(prev, end);
    }

    console.log(count);
}

balloons([[10,16],[2,8],[1,6],[7,12]])
balloons([[1,2],[3,4],[5,6],[7,8]])
balloons([[1,2],[2,3],[3,4],[4,5]])
balloons([[1,2]])
balloons([[2,3],[2,3]])